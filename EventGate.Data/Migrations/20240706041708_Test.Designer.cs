// <auto-generated />
using System;
using EventGate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventGate.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240706041708_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventGate.Data.Entities.ChatReceiver", b =>
                {
                    b.Property<string>("ChatReceiverID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ChatReceiverID");

                    b.HasIndex("ChatID");

                    b.HasIndex("ReceiverID");

                    b.ToTable("ChatReceivers", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entities.UserChatRoom", b =>
                {
                    b.Property<string>("UserChatRoomID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatRoomID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserChatRoomID");

                    b.HasIndex("ChatRoomID");

                    b.HasIndex("UserID");

                    b.ToTable("UserChatRooms", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Blog", b =>
                {
                    b.Property<string>("BlogID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BlogID");

                    b.HasIndex("AuthorID");

                    b.HasIndex("EventID");

                    b.ToTable("Blogs", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Chat", b =>
                {
                    b.Property<string>("ChatID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatRoomID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ChatID");

                    b.HasIndex("ChatRoomID");

                    b.HasIndex("SenderID");

                    b.ToTable("Chats", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.ChatHistory", b =>
                {
                    b.Property<string>("ChatHistoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ArchivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChatID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatRoomID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ChatHistoryID");

                    b.ToTable("ChatHistories", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.ChatRoom", b =>
                {
                    b.Property<string>("ChatRoomID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChatRoomID");

                    b.ToTable("ChatRooms", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Club", b =>
                {
                    b.Property<string>("ClubID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoClub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresidentID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClubID");

                    b.HasIndex("PresidentID");

                    b.ToTable("Clubs", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Event", b =>
                {
                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkStream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("QRCode")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TicketQuantity")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("EventTypeID");

                    b.ToTable("Events", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventClub", b =>
                {
                    b.Property<string>("EventClubID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClubID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EventClubID");

                    b.HasIndex("ClubID");

                    b.HasIndex("EventID");

                    b.ToTable("EventClubs", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventFeedback", b =>
                {
                    b.Property<string>("FeedbackID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FeedbackID");

                    b.HasIndex("EventID");

                    b.HasIndex("UserID");

                    b.ToTable("EventFeedbacks", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventHistory", b =>
                {
                    b.Property<string>("EventHistoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventTypeID1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PosterImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("QRCode")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TicketQuantity")
                        .HasColumnType("int");

                    b.HasKey("EventHistoryID");

                    b.HasIndex("EventTypeID");

                    b.HasIndex("EventTypeID1");

                    b.ToTable("EventHistories", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventRule", b =>
                {
                    b.Property<string>("RuleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RuleID");

                    b.HasIndex("EventTypeID");

                    b.ToTable("EventRules", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventType", b =>
                {
                    b.Property<string>("EventTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EventTypeID");

                    b.ToTable("EventTypes", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Order", b =>
                {
                    b.Property<string>("OrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.OrderDetail", b =>
                {
                    b.Property<string>("OrderDetailID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TicketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("TicketID")
                        .IsUnique()
                        .HasFilter("[TicketID] IS NOT NULL");

                    b.ToTable("OrderDetails", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.PaymentsInfo", b =>
                {
                    b.Property<string>("PaymentsInfoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentsInfoID");

                    b.HasIndex("EventID")
                        .IsUnique()
                        .HasFilter("[EventID] IS NOT NULL");

                    b.ToTable("PaymentsInfos", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Point", b =>
                {
                    b.Property<string>("PointID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PointID");

                    b.HasIndex("UserID");

                    b.ToTable("Points", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Seat", b =>
                {
                    b.Property<string>("SeatID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeatID");

                    b.ToTable("Seats", "dbo");

                    b.HasData(
                        new
                        {
                            SeatID = "60140b4f-1583-4ad2-a09b-e6fc0f812a0a",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(66),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(105),
                            Number = 1,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "ae14b5c4-0533-49b0-9d2e-0ea9d0094e95",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(110),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(113),
                            Number = 2,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "798ec8c7-d67f-45a4-8384-e86c70419306",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(115),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(117),
                            Number = 3,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "6685dec4-9b88-4b9a-93d7-a874d7d9312b",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(119),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(121),
                            Number = 4,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "c11ffd51-d0f4-435e-a062-3e2f04867083",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(123),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(129),
                            Number = 5,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "88a8f612-8ef6-407d-b57d-ec3c8220676d",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(133),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(135),
                            Number = 6,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "cb21d506-319a-406c-8e56-a56748ca9b4b",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(137),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(139),
                            Number = 1,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "d9127566-7c18-45b2-a36a-39bc6088d407",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(141),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(143),
                            Number = 2,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "e26cfe03-8f11-49b4-8444-46989efee9ae",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(144),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(149),
                            Number = 3,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "13c61006-e704-4361-b883-82372ae186a8",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(151),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(154),
                            Number = 4,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "b6193d0a-f830-428c-8edf-853fabd5a7a8",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(155),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(157),
                            Number = 5,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "92487dcd-7667-456c-af9f-0aa28ae01307",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(159),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(161),
                            Number = 6,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "e38e45d9-49f6-4c85-b5b1-2e8e8b3e3855",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(163),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(167),
                            Number = 1,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "d4868198-79a9-41e6-a82b-013cb229d6f2",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(168),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(170),
                            Number = 2,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "074edf97-49b6-4b90-a8b1-592aea30dade",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(172),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(174),
                            Number = 3,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "5f3bf3b4-5149-4f7d-aa6e-a7f4f2965874",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(175),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(223),
                            Number = 4,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "0c1eb912-5677-40c5-b944-3f884cc754af",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(225),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(229),
                            Number = 5,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "b0c53578-82aa-49c7-b69a-1fae52d17560",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(232),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(234),
                            Number = 6,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "e9ae9084-403c-4383-b518-19192582c47e",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(236),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(238),
                            Number = 1,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "03c3f51b-392f-4539-aa26-7d5e4e6d80f3",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(240),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(241),
                            Number = 2,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "76b55521-0d5d-47e9-8d46-cb4c52c25b01",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(243),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(247),
                            Number = 3,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "8deade89-8289-4ea3-a364-a533ecf891aa",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(249),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(250),
                            Number = 4,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "4dce05e3-b5c0-42ae-871b-b80853a2cd9e",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(252),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(254),
                            Number = 5,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "f964b084-c025-470a-a1d3-6075654216a1",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(256),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(257),
                            Number = 6,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "ec0adaa5-bebf-4d25-9686-a65d7ddf2444",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(259),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(263),
                            Number = 1,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "1c656be1-9e5f-41e2-9a2b-98d026ac3a3c",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(265),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(267),
                            Number = 2,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "e1a10a44-4d58-4134-9c65-5cc5a9889d92",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(268),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(270),
                            Number = 3,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "1e1317d7-d84e-48d1-bb0e-e979867757f7",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(272),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(274),
                            Number = 4,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "809135f3-45a7-456a-90de-2ad46ab81d1a",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(275),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(280),
                            Number = 5,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "6ca27927-206d-4cb1-a67f-293e0e8579ac",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(282),
                            Hall = "Alpha",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(284),
                            Number = 6,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "24b7fc97-4a38-42cb-8fee-174169ac0181",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(286),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(288),
                            Number = 1,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "5830de96-f5a6-4b8e-8d66-3dbf5ef25da5",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(290),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(291),
                            Number = 2,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "7446d91c-7e5c-4c96-a3cc-5acd17dc3de2",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(293),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(297),
                            Number = 3,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "9c07ce09-c957-4fbc-bea0-d3f994dcc493",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(300),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(302),
                            Number = 4,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "7563056b-217c-4818-9f50-3639f898b520",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(304),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(305),
                            Number = 5,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "13129f23-248e-49a3-98b7-239c422c273a",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(307),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(309),
                            Number = 6,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "49e72211-67df-492b-b710-31080dfdf021",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(311),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(315),
                            Number = 1,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "be66db13-8c71-46c6-b047-7ed5bc400c41",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(317),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(318),
                            Number = 2,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "786e3755-d724-4dd2-a75d-36d1b3fcb100",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(320),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(322),
                            Number = 3,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "d9204c2b-ac6f-4627-86a9-bf00bffd035d",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(354),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(356),
                            Number = 4,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "1a7ba2c2-df06-4fe8-ae0a-d1ff414f45d4",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(357),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(362),
                            Number = 5,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "25465937-4c22-4c79-83fb-cb438d250347",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(364),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(365),
                            Number = 6,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "baf5b690-6791-4a4f-bd5c-b61d7e0343ad",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(367),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(369),
                            Number = 1,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "481f5e42-e3f1-4e8c-b8e9-8a9cbb73bd2c",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(371),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(373),
                            Number = 2,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "e8c41825-084e-4313-a6ad-d11f7296da88",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(375),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(378),
                            Number = 3,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "2e64a8d6-619c-4b47-9fda-0c5678089898",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(380),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(382),
                            Number = 4,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "56c078b0-d59c-4d36-ba18-807b71ff390c",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(384),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(385),
                            Number = 5,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "7e946b0d-153c-4532-a93c-b36200629d36",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(387),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(389),
                            Number = 6,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "1d508d1c-4c33-465d-bb7e-a77a7d0abb91",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(391),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(395),
                            Number = 1,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "d9cb7521-c2b6-44a9-9ece-e60fd77efcd1",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(397),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(398),
                            Number = 2,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "0ab2eaec-4a94-4ac3-ac95-35b2a327dc74",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(400),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(402),
                            Number = 3,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "40767d02-11a7-46c9-9f85-cc00d174a1d0",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(404),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(406),
                            Number = 4,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "554f0e74-43b7-497b-a57c-12c3b210d6e3",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(407),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(411),
                            Number = 5,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "89c86dc8-cef7-489d-b707-90db7ecc8552",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(413),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(415),
                            Number = 6,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "90c2ba47-6cdd-4b18-ba7f-4a896d4e2158",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(416),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(418),
                            Number = 1,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "88d4e081-e67e-492c-a9de-70fde8e3bbac",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(420),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(422),
                            Number = 2,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "04cf414f-e29f-4199-adbe-4cef4536a65f",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(424),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(428),
                            Number = 3,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "9e33c319-4a25-4a21-9e54-80aedbeb15b2",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(429),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(431),
                            Number = 4,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "a9648a5d-28f7-444f-bbb2-3a0cef0ded8c",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(433),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(435),
                            Number = 5,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "ff12447e-227a-4879-a1af-54899c30b42b",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(436),
                            Hall = "Beta",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(438),
                            Number = 6,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "e2072297-4675-4a40-9735-b7088d90a8b6",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(440),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(444),
                            Number = 1,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "35c5bb23-c3c2-4cfb-a60d-275401d9d694",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(446),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(448),
                            Number = 2,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "85eed7f9-176f-4e20-a3ba-1d9d3c8b7581",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(450),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(451),
                            Number = 3,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "af3d85d5-0c23-495b-8799-b0775c57251b",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(453),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(455),
                            Number = 4,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "d7faf27c-b1e8-4ce3-8b30-0591cd3457ff",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(457),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(460),
                            Number = 5,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "8ba1d6c5-973f-4762-83ed-b03b71d79c80",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(497),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(498),
                            Number = 6,
                            Row = "A"
                        },
                        new
                        {
                            SeatID = "7689a273-a525-4ce2-9fec-436f1f8d2508",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(500),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(502),
                            Number = 1,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "9930d1fc-5ff7-45ae-8a1a-f52f4bb946e6",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(504),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(505),
                            Number = 2,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "603d735e-2128-4be8-9dec-3b58d1d06259",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(507),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(511),
                            Number = 3,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "8f11ac8d-b6ed-4809-bdb7-8e4aac7328a8",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(513),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(515),
                            Number = 4,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "05aede11-6960-4a2c-84f2-4de65774fdda",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(517),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(518),
                            Number = 5,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "10ec98c9-0e6f-4d0e-b543-1406bbe08298",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(520),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(522),
                            Number = 6,
                            Row = "B"
                        },
                        new
                        {
                            SeatID = "fd7599eb-3c19-4822-b073-c52c8cb99da0",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(524),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(528),
                            Number = 1,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "58df5687-a923-4e8c-9f1e-397b957a05b9",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(529),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(531),
                            Number = 2,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "8e00f6d2-7b9c-40bb-8b1f-387389ac52d0",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(533),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(535),
                            Number = 3,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "f28b9708-021d-449d-86e2-33c48cc47feb",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(537),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(539),
                            Number = 4,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "34fe61dc-3a98-48f3-86e6-71a38c4db378",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(541),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(545),
                            Number = 5,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "f5ca6d6e-3842-4336-99e8-df3a30a0c104",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(547),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(548),
                            Number = 6,
                            Row = "C"
                        },
                        new
                        {
                            SeatID = "0f9f2b0e-d341-458e-b946-bbcbe052509b",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(550),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(552),
                            Number = 1,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "a6035c97-00b5-4790-b616-1ec190e0b9a6",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(554),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(556),
                            Number = 2,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "63c98236-56d2-4070-8630-c85aee6057a1",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(558),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(561),
                            Number = 3,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "4e20b1e6-cfaa-4038-bc09-8f366823807f",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(563),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(565),
                            Number = 4,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "326768f8-b6bf-4d19-934a-4c3d800ab41f",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(567),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(569),
                            Number = 5,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "fa595788-a5b4-42f1-b74b-7885f6b7ed53",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(571),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(572),
                            Number = 6,
                            Row = "D"
                        },
                        new
                        {
                            SeatID = "e135b760-66a4-4239-84c1-1c40c494765d",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(574),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(578),
                            Number = 1,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "638c1c1a-ce44-43ac-9429-60309fc382ba",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(580),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(582),
                            Number = 2,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "9b9161ed-9233-4a08-a92d-5e63520871cf",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(583),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(585),
                            Number = 3,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "d8d4c6b2-bcd0-4fa9-80dc-194ccea26b1c",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(587),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(589),
                            Number = 4,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "6ba39e40-9a3f-4f8d-8407-502e1a18c0a0",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(624),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(628),
                            Number = 5,
                            Row = "E"
                        },
                        new
                        {
                            SeatID = "605d87f2-867b-46f4-86fc-1d2aa9bc6703",
                            CreatedBy = "System",
                            CreatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(630),
                            Hall = "Ceasar",
                            IsAvailable = true,
                            LastUpdatedBy = "System",
                            LastUpdatedTime = new DateTime(2024, 7, 6, 11, 17, 6, 689, DateTimeKind.Local).AddTicks(632),
                            Number = 6,
                            Row = "E"
                        });
                });

            modelBuilder.Entity("EventGate.Data.Entity.Ticket", b =>
                {
                    b.Property<string>("TicketID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("QRCode")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SeatID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TicketID");

                    b.HasIndex("EventID");

                    b.HasIndex("SeatID");

                    b.ToTable("Tickets", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isConfirmed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.UserEvent", b =>
                {
                    b.Property<string>("UserEventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserEventID");

                    b.HasIndex("EventID");

                    b.HasIndex("UserID");

                    b.ToTable("UserEvents", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.UserEventHistory", b =>
                {
                    b.Property<string>("UserEventHistoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEventID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserEventHistoryID");

                    b.ToTable("UserEventHistories", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.UserHistory", b =>
                {
                    b.Property<string>("UserHistoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ArchivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserHistoryID");

                    b.ToTable("UserHistories", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Voucher", b =>
                {
                    b.Property<string>("VoucherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VoucherID");

                    b.HasIndex("EventID");

                    b.HasIndex("UserID");

                    b.ToTable("Vouchers", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "dbo");
                });

            modelBuilder.Entity("EventGate.Data.Entities.ChatReceiver", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Chat", "Chat")
                        .WithMany("ChatReceivers")
                        .HasForeignKey("ChatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventGate.Data.Entity.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("EventGate.Data.Entities.UserChatRoom", b =>
                {
                    b.HasOne("EventGate.Data.Entity.ChatRoom", "ChatRoom")
                        .WithMany("UserChatRooms")
                        .HasForeignKey("ChatRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventGate.Data.Entity.User", "User")
                        .WithMany("UserChatRooms")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatRoom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Blog", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorID");

                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithMany("Blogs")
                        .HasForeignKey("EventID");

                    b.Navigation("Author");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Chat", b =>
                {
                    b.HasOne("EventGate.Data.Entity.ChatRoom", "ChatRoom")
                        .WithMany("Chats")
                        .HasForeignKey("ChatRoomID");

                    b.HasOne("EventGate.Data.Entity.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChatRoom");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Club", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", "President")
                        .WithMany()
                        .HasForeignKey("PresidentID");

                    b.Navigation("President");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Event", b =>
                {
                    b.HasOne("EventGate.Data.Entity.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeID");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventClub", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Club", "Club")
                        .WithMany("EventClubs")
                        .HasForeignKey("ClubID");

                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithMany("EventClubs")
                        .HasForeignKey("EventID");

                    b.Navigation("Club");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventFeedback", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithMany("EventFeedbacks")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EventGate.Data.Entity.User", "User")
                        .WithMany("EventFeedbacks")
                        .HasForeignKey("UserID");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventHistory", b =>
                {
                    b.HasOne("EventGate.Data.Entity.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EventGate.Data.Entity.EventType", null)
                        .WithMany("EventHistories")
                        .HasForeignKey("EventTypeID1");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventRule", b =>
                {
                    b.HasOne("EventGate.Data.Entity.EventType", "EventType")
                        .WithMany("EventRules")
                        .HasForeignKey("EventTypeID");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Order", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventGate.Data.Entity.OrderDetail", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID");

                    b.HasOne("EventGate.Data.Entity.Ticket", "Ticket")
                        .WithOne("OrderDetail")
                        .HasForeignKey("EventGate.Data.Entity.OrderDetail", "TicketID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Order");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("EventGate.Data.Entity.PaymentsInfo", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithOne("PaymentsInfo")
                        .HasForeignKey("EventGate.Data.Entity.PaymentsInfo", "EventID");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Point", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Ticket", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithMany("Tickets")
                        .HasForeignKey("EventID");

                    b.HasOne("EventGate.Data.Entity.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatID");

                    b.Navigation("Event");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("EventGate.Data.Entity.UserEvent", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventID");

                    b.HasOne("EventGate.Data.Entity.User", "User")
                        .WithMany("UserEvents")
                        .HasForeignKey("UserID");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Voucher", b =>
                {
                    b.HasOne("EventGate.Data.Entity.Event", "Event")
                        .WithMany("Vouchers")
                        .HasForeignKey("EventID");

                    b.HasOne("EventGate.Data.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventGate.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EventGate.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EventGate.Data.Entity.Chat", b =>
                {
                    b.Navigation("ChatReceivers");
                });

            modelBuilder.Entity("EventGate.Data.Entity.ChatRoom", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("UserChatRooms");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Club", b =>
                {
                    b.Navigation("EventClubs");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Event", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("EventClubs");

                    b.Navigation("EventFeedbacks");

                    b.Navigation("PaymentsInfo");

                    b.Navigation("Tickets");

                    b.Navigation("UserEvents");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("EventGate.Data.Entity.EventType", b =>
                {
                    b.Navigation("EventHistories");

                    b.Navigation("EventRules");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EventGate.Data.Entity.Ticket", b =>
                {
                    b.Navigation("OrderDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("EventGate.Data.Entity.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("EventFeedbacks");

                    b.Navigation("Orders");

                    b.Navigation("UserChatRooms");

                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
